<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//TaxonX//DTD Taxonomic Treatment Publishing DTD v0 20100105//EN" "../../nlm/tax-treatment-NS0.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tp="http://www.plazi.org/taxpub" article-type="research-article">
  <front>
    <journal-meta>
      <journal-id journal-id-type="pmc">Biodiversity Data Journal</journal-id>
      <journal-id journal-id-type="publisher-id">Biodiversity Data Journal</journal-id>
      <journal-title-group>
        <journal-title xml:lang="en">Biodiversity Data Journal</journal-title>
        <abbrev-journal-title xml:lang="en">BDJ</abbrev-journal-title>
      </journal-title-group>
      <issn pub-type="ppub">1314-2836</issn>
      <issn pub-type="epub">1314-2828</issn>
      <publisher>
        <publisher-name>Pensoft Publishers</publisher-name>
      </publisher>
    </journal-meta>
    <article-meta>
      <article-id pub-id-type="publisher-id">Biodiversity Data Journal</article-id>
      <article-id pub-id-type="doi">10.3897/BDJ.4.e8357</article-id>
      <article-id pub-id-type="other">4728</article-id>
      <article-categories>
        <subj-group subj-group-type="heading">
          <subject>Software Description</subject>
        </subj-group>
        <subj-group subj-group-type="Subject classification">
          <subject>Aquatic biology</subject>
          <subject>Biodiversity &amp; Conservation</subject>
          <subject>Bioinformatics</subject>
          <subject>Microbiology &amp; Virology</subject>
          <subject>Ecological Informatics</subject>
          <subject>Ecology &amp; Environmental sciences</subject>
          <subject>Data analysis &amp; modelling</subject>
        </subj-group>
        <subj-group subj-group-type="Geographical classification">
          <subject>World</subject>
        </subj-group>
      </article-categories>
      <title-group>
        <article-title>Optimized R functions for analysis of ecological community data using the R virtual laboratory (RvLab)</article-title>
      </title-group>
      <contrib-group content-type="authors">
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Varsos</surname>
            <given-names>Constantinos</given-names>
          </name>
          <xref ref-type="aff" rid="A1">‡</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Patkos</surname>
            <given-names>Theodore</given-names>
          </name>
          <xref ref-type="aff" rid="A1">‡</xref>
        </contrib>
        <contrib contrib-type="author" corresp="yes">
          <name name-style="western">
            <surname>Oulas</surname>
            <given-names>Anastasis</given-names>
          </name>
          <email xlink:type="simple">oulas@hcmr.gr</email>
          <xref ref-type="aff" rid="A2">§</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Pavloudi</surname>
            <given-names>Christina</given-names>
          </name>
          <xref ref-type="aff" rid="A2">§</xref>
          <xref ref-type="aff" rid="A3">|</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Gougousis</surname>
            <given-names>Alexandros</given-names>
          </name>
          <xref ref-type="aff" rid="A2">§</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Ijaz</surname>
            <given-names>Umer Zeeshan</given-names>
          </name>
          <xref ref-type="aff" rid="A4">¶</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Filiopoulou</surname>
            <given-names>Irene</given-names>
          </name>
          <xref ref-type="aff" rid="A2">§</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Pattakos</surname>
            <given-names>Nikolaos</given-names>
          </name>
          <xref ref-type="aff" rid="A2">§</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Vanden Berghe</surname>
            <given-names>Edward</given-names>
          </name>
          <xref ref-type="aff" rid="A5">#</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Fernández-Guerra</surname>
            <given-names>Antonio</given-names>
          </name>
          <xref ref-type="aff" rid="A6">¤</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Faulwetter</surname>
            <given-names>Sarah</given-names>
          </name>
          <xref ref-type="aff" rid="A2">§</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Chatzinikolaou</surname>
            <given-names>Eva</given-names>
          </name>
          <xref ref-type="aff" rid="A2">§</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Pafilis</surname>
            <given-names>Evangelos</given-names>
          </name>
          <xref ref-type="aff" rid="A2">§</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Bekiari</surname>
            <given-names>Chryssoula</given-names>
          </name>
          <xref ref-type="aff" rid="A1">‡</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Doerr</surname>
            <given-names>Martin</given-names>
          </name>
          <xref ref-type="aff" rid="A1">‡</xref>
        </contrib>
        <contrib contrib-type="author" corresp="no">
          <name name-style="western">
            <surname>Arvanitidis</surname>
            <given-names>Christos</given-names>
          </name>
          <xref ref-type="aff" rid="A2">§</xref>
        </contrib>
      </contrib-group>
      <aff id="A1">
        <label>‡</label>
        <addr-line>Institute of Computer Science, Foundation of Research and Technology Hellas, Heraklion, Greece</addr-line>
      </aff>
      <aff id="A2">
        <label>§</label>
        <addr-line>Institute of Marine Biology, Biotechnology and Aquaculture, Hellenic Centre for Marine Research, Heraklion, Crete, Greece</addr-line>
      </aff>
      <aff id="A3">
        <label>|</label>
        <addr-line>Department of Biology, University of Ghent, Ghent, Belgium, Department of Microbial Ecophysiology, University of Bremen, Bremen, Germany</addr-line>
      </aff>
      <aff id="A4">
        <label>¶</label>
        <addr-line>University of Glasgow, Glasgow, United Kingdom</addr-line>
      </aff>
      <aff id="A5">
        <label>#</label>
        <addr-line>Vrije Universiteit Brussels, 1050, Brussels, Belgium</addr-line>
      </aff>
      <aff id="A6">
        <label>¤</label>
        <addr-line>University of Oxford, Oxford e-Research Centre, Oxford, United Kingdom</addr-line>
      </aff>
      <author-notes>
        <fn fn-type="corresp">
          <p>Corresponding author: Anastasis Oulas (<email xlink:type="simple">oulas@hcmr.gr</email>).</p>
        </fn>
        <fn fn-type="edited-by">
          <p>Academic editor: Vasilis Gerovasileiou</p>
        </fn>
      </author-notes>
      <pub-date pub-type="collection">
        <year>2016</year>
      </pub-date>
      <pub-date pub-type="epub">
        <day>01</day>
        <month>11</month>
        <year>2016</year>
      </pub-date>
      <issue>4</issue>
      <elocation-id>e8357</elocation-id>
      <history>
        <date date-type="received">
          <day>03</day>
          <month>03</month>
          <year>2016</year>
        </date>
        <date date-type="accepted">
          <day>04</day>
          <month>06</month>
          <year>2016</year>
        </date>
      </history>
      <permissions>
        <copyright-statement>Constantinos Varsos, Theodore Patkos, Anastasis Oulas, Christina Pavloudi, Alexandros Gougousis, Umer Zeeshan Ijaz, Irene Filiopoulou, Nikolaos Pattakos, Edward Vanden Berghe, Antonio Fernández-Guerra, Sarah Faulwetter, Eva Chatzinikolaou, Evangelos Pafilis, Chryssoula Bekiari, Martin Doerr, Christos Arvanitidis</copyright-statement>
        <license license-type="creative-commons-attribution" xlink:href="http://creativecommons.org/licenses/by/4.0" xlink:type="simple">
          <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution License 4.0 (CC-BY), which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
        </license>
      </permissions>
      <abstract>
        <label>Abstract</label>
        <sec sec-type="background">
          <title>Background</title>
          <p>Parallel data manipulation using R has previously been addressed by members of the R community, however most of these studies produce <italic>ad hoc</italic> solutions that are not readily available to the average R user. Our targeted users, ranging from the expert ecologist/microbiologists to computational biologists, often experience difficulties in finding optimal ways to exploit the full capacity of their computational resources. In addition, improving performance of commonly used R scripts becomes increasingly difficult especially with large datasets. Furthermore, the implementations described here can be of significant interest to expert bioinformaticians or R developers. Therefore, our goals can be summarized as: (i) description of a complete methodology for the analysis of large datasets by combining capabilities of diverse R packages, (ii) presentation of their application through a virtual R laboratory (<ext-link ext-link-type="uri" xlink:href="https://rvlab.portal.lifewatchgreece.eu/">RvLab</ext-link>) that makes execution of complex functions and visualization of results easy and readily available to the end-user.</p>
        </sec>
        <sec sec-type="new information">
          <title>New information</title>
          <p>In this paper, the novelty stems from implementations of parallel methodologies which rely on the processing of data on different levels of abstraction and the availability of these processes through an integrated portal. Parallel implementation R packages, such as the <italic>pbdMPI</italic> (Programming with Big Data – Interface to MPI) package, are used to implement Single Program Multiple Data (SPMD) parallelization on primitive mathematical operations, allowing for interplay with functions of the <italic>vegan</italic> package. The <italic>dplyr</italic> and <italic>RPostgreSQL</italic> R packages are further integrated offering connections to dataframe like objects (databases) as secondary storage solutions whenever memory demands exceed available RAM resources.</p>
          <p>The <ext-link ext-link-type="uri" xlink:href="https://rvlab.portal.lifewatchgreece.eu/">RvLab</ext-link> is running on a PC cluster, using version 3.1.2 (2014-10-31) on a x86_64-pc-linux-gnu (64-bit) platform, and offers an intuitive virtual environmet interface enabling users to perform analysis of ecological and microbial communities based on optimized <italic>vegan</italic> functions.</p>
          <p>A beta version of the RvLab is available after registration at: <ext-link ext-link-type="uri" xlink:href="https://portal.lifewatchgreece.eu/">https://portal.lifewatchgreece.eu/</ext-link></p>
        </sec>
      </abstract>
      <kwd-group>
        <label>Keywords</label>
        <kwd>Parallel data manipulation</kwd>
        <kwd>R</kwd>
        <kwd><italic>pbdMPI</italic> package</kwd>
        <kwd>Single Program Multiple Data (SPMD) parallelization</kwd>
        <kwd>virtual enviroment</kwd>
        <kwd><italic>vegan</italic> package</kwd>
        <kwd>biodiversity analyses</kwd>
        <kwd>ecological analyses</kwd>
      </kwd-group>
      <funding-group>
        <funding-statement>This work was supported by the LifeWatchGreece infrastructure (MIS 384676), funded by the Greek Government under the General Secretariat of Research and Technology(GSRT), National Strategic Reference Framework (NSRF).</funding-statement>
      </funding-group>
      <counts>
        <fig-count count="20"/>
        <table-count count="0"/>
        <ref-count count="21"/>
      </counts>
    </article-meta>
  </front>
  <body>
    <sec sec-type="Introduction">
      <title>Introduction</title>
      <p>The advent of interdisciplinary science fields like computational ecology/biodiversity and metagenomics (<xref ref-type="bibr" rid="B2553788">Oulas et al. 2015</xref>, <xref ref-type="bibr" rid="B2555019">Canhos et al. 2004</xref>, <xref ref-type="bibr" rid="B2555009">Petrovskii and Petrovskaya 2012</xref>, <xref ref-type="bibr" rid="B2555029">Soberon and Peterson 2004</xref>) is contributing to the constant escalation of complex computational pipelines, which, in turn, requires increased computational resources and capacities. The size and speed of the computational analyses are limited by the source code which delineates the accessible functions and libraries. The ever growing in popularity and usability R statistical programming language (<xref ref-type="bibr" rid="B2555039">R Core Team 2013</xref>) provides a wide array of built-in functions, libraries and packages that are of valuable use to the environmental ecologist, microbiologist as well as many other academic disciplines. The use of these functions is often sub-optimal with respect to data size manipulation and speed-up. However, the average biologist is often not inclined to become acquainted with the necessary programming and information technology (IT) skills, required to efficiently transform conventional available functions into computationally optimized methods. Therefore, they are deprived from speed-up and improved memory manipulation during their computational and mathematical operations.</p>
      <p>On the other hand, computer scientists are well-aware of tools, methods and implementations that can provide significant boosts in speed for computational calculations and further solve issues like memory exhaustion, a problem often faced in analyses using “big” data.</p>
      <p>In this work, we have brought together expert scientists from the disciplines of environmental ecology and microbiology with IT and mathematical experts in order to focus on optimization methods for widely used statistical functions, effective in environmental ecology today. More specifically, we focus on the <italic>vegan</italic> (Community Ecology) package (<xref ref-type="bibr" rid="B2555048">Oksanen et al. 2015</xref>) available in R and the ways to optimise common functions with respect to both speed-up and memory usability. This work comes together under a virtual laboratory (vLab) which is available through the <ext-link ext-link-type="uri" xlink:href="https://portal.lifewatchgreece.eu/">LifeWatchGreece portal</ext-link>.</p>
      <p>Similar efforts, as in <xref ref-type="bibr" rid="B2588802">Buttigieg and Ramette (2014)</xref>, have resulted in the creation of online R platforms, such as the "Multivariate AnalysiS Applications for Microbial Ecology (<ext-link ext-link-type="uri" xlink:href="http://mb3is.megx.net/eatme/">MASAME</ext-link>)" suite; it seems that there is a need for the creation of such platforms as more and more scientists are leaning towards the use of open source software for their analyses. However, although MASAME makes use of R and some of the <italic>vegan</italic> functions are available for the users, there is no extra effort on their optimization and parallelization.</p>
      <p>Our main incentive is to make optimization tasks easily available to the average user who has no expertise and prior training in this area of research. This way, environmental ecologists can make use of optimized functions, implemented by IT experts and mathematicians, through a freely available, user-friendly interface, without having to spend time analysing parallelization complexity and deciding on which function to use and how to do so. In addition, multiple non-parallelized functions are also available for users with no programming experience via the RvLab interface. Source code and methodologies are accessible to users with programming and IT knowledge.</p>
      <p>We describe the optimization methods and their implementation in detail and highlight the advantages of using our optimized R functions, with respect to both computational time speed-up, as well as improved memory manipulation in order to avoid memory exhaustion issues. The analyses we focus on can be computationally demanding primarily due to large matrix operations, increasing permutations in likelihood function computations and iterative basic mathematical operations.</p>
      <sec sec-type="Motivation and State-of-the-Art">
        <title>Motivation and State-of-the-Art</title>
        <p>Despite its popularity among the research community, R still seems inflexible in fully exploiting the latest developments in computer software and hardware. As there are no inherent constructs for parallelizing computations, it is up to the developer to adapt the R code, in order to take advantage of the resources available by multi-core CPUs. Moreover, when the data computed are too big to fit in main memory, no simple solution is considered standard. Packages that offer workarounds are indeed available, but their use by non-expert R users is rarely considered straightforward. These are real issues faced by researchers, whose needs for processing collected data continually increase both in computational demand and in size.</p>
        <p>Working with large datasets in R can be cumbersome because of the need to keep objects in physical memory. The need to keep whole objects in memory becomes a challenging task to those who might want to work interactively with large datasets. Several packages attempt to overcome problems when accessing big volumes of data. The <italic>bigmem</italic> package (<xref ref-type="bibr" rid="B3007109">Kane et al. 2013</xref>) is designed to handle massive data sets that are not larger than the available RAM. It overcomes the restriction of R using matrices or data frames that, even though they fit in RAM, no space is available to handle the overhead of working with them. Furthermore, it extends and augments the R statistical programming environment, thus enabling more powerful parallel analyses and data mining of massive data sets, although it is restricted to the available RAM size (even though some options for connecting its objects with file-backed mappings can be implemented).</p>
        <p>The Programming with Big Data in R (pbdR) project (<xref ref-type="bibr" rid="B3007066">Ostrouchov et al. 2012</xref>) seeks to elevate the R language to supercomputers. Most of its functionalities revolve around parallelization features, yet the <italic>pbdDMAT</italic> package (<xref ref-type="bibr" rid="B3007097">Schmidt et al. 2012</xref>) of the project offers an implicitly parallel system for doing distributed matrix computation in R. The <italic>bigmem</italic> and <italic>pbdDMAT</italic> packages are useful solutions, but do not always provide the level of flexibility needed in handling complex constructs because of the fact that they rely on their own constructs to handle big data.</p>
        <p>Nowadays, the <italic>dplyr</italic> package (<xref ref-type="bibr" rid="B3007156">Wickham and Francois 2015</xref>) has become very popular for data manipulation, providing a repertoire of functions for accessing data stored in databases. Coupled with packages dedicated for specific database implementations, such as <italic>RPostgreSQL</italic> (<xref ref-type="bibr" rid="B3007193">Conway et al. 2013</xref>), it offers the possibility to write R scripts that access the underlying databases from within the R environment, but with the look and feel of relational data manipulation. This approach is more attractive for a large scale implementation, such as the one designed for the LifeWatchGreece portal.</p>
        <p>As far as parallelization is concerned, a multitude of packages have emerged, such as <italic>snow</italic> (<xref ref-type="bibr" rid="B3007166">Tierney et al. 2015</xref>), <italic>multicore</italic> (<xref ref-type="bibr" rid="B3007211">Urbanek 2009</xref>) and <ext-link ext-link-type="uri" xlink:href="https://stat.ethz.ch/R-manual/R-devel/library/parallel/doc/parallel.pdf"><italic>parallel</italic></ext-link>. Due to the complexity of tasks required in <italic>vegan</italic>, as well as in other packages for the LifeWatchGreece project, we found the existing approaches for parallel computing rather restrictive. Our decision in this project was to go into the low-level whenever necessary and implement custom parallel solutions which can provide more flexibility. To assist us in this process, packages that provide interfaces to MPI (Message-Passing Interface) for R are proved really valuable. <italic>Rmpi</italic> (<xref ref-type="bibr" rid="B3007041">Yu 2002</xref>) is one of the most popular solutions that can port low level MPI functions into R, abstracting the complexities of writing C or Fortran code. The more recent <italic>pbdR</italic> project (<xref ref-type="bibr" rid="B3007066">Ostrouchov et al. 2012</xref>) also offers such a wrapper through the <italic>pbdMPI</italic> library, which is intended for Single Program Multiple Data (SPMD) programming with big data.</p>
        <p>After considering the benefits offered, we decided to adopt <italic>pbdMPI</italic> (<xref ref-type="bibr" rid="B3292691">Chen et al. 2012</xref>, as our primary package for parallelization within LifeWatchGreece, and couple it with other solutions for parallelization or optimization of code, whenever necessary.</p>
        <p>Summarizing, the work conducted in the context of the project aims at applying optimization techniques for data on two different levels of abstraction described in detail in the project description. This is done by:</p>
        <p>1) Using the <italic>pbdMPI</italic> package to implement Single Program Multiple Data (SPMD) parallelization on primitive mathematical operations, allowing for interplay with functions of the <italic>vegan</italic> package.</p>
        <p>2) Using the <italic>dplyr</italic> and <italic>RPostgreSQL</italic> packages in order to offer secondary storage solutions whenever memory demands exceed available RAM resources (memory exhaustion)</p>
        <p>Option (1) may be employed in conjugation with option (2) to address memory exhaustion issues. While, for speed-up and job segmentation issues we only use option (1).</p>
        <p>We finally evaluate our optimization results using two test case scenarios with real data obtained from environmental ecologists in the standard file formats, commonly utilized in the field. We also demonstrate results and visualization outcomes obtained through the graphical user interface available through the <ext-link ext-link-type="uri" xlink:href="https://portal.lifewatchgreece.eu/">LifeWatchGreece portal</ext-link>.</p>
      </sec>
    </sec>
    <sec sec-type="Project description">
      <title>Project description</title>
      <sec sec-type="Design description">
        <title>Design description</title>
        <p>The general architecture design to approach the development of the LifeWatchGreece RvLab is presented in Fig. <xref ref-type="fig" rid="F2461855">1</xref>. At the bottom layer, a dedicated multi-core cluster has been installed, providing the necessary resources for supporting the execution of demanding computational tasks (jobs) submitted by RvLab users. On top of that, all jobs are inserted into a priority queue and forwarded to the cluster within the Linux Operating System.</p>
        <p>Each R script communicates with the cluster using the MPI message-passing protocol. RvLab abstracts the implementation details from the end-user: each <italic>vegan</italic> function implemented for execution within the RvLab takes advantage of the appropriate R packages for parallel computing and big data manipulation, which are preconfigured to adapt to the workload of the cluster at each particular moment.</p>
        <p>An intuitive User Interface provides all necessary facilities for end users to perform ordinary tasks, such as to upload their datasets, to choose and parameterize the desirable <italic>vegan</italic> functions available by the RvLab, to monitor the progress of execution of their submitted jobs, and to visualize and download the produced results.</p>
        <p>
          <bold>Optimization Analysis Process</bold>
        </p>
        <p>The core functionalities of the RvLab lie in the middle layers of this architecture, namely in the way the <italic>vegan</italic> functions become appropriately adapted for execution within the LifeWatchGreece Cluster Infrastructure. We next describe first the general approach followed for each individual <italic>vegan</italic> function, in order to determine the optimization techniques that should be followed and then we explain in detail our generic methodology for optimizing functions.</p>
        <p>Optimization methods focus on three major processes: a) Parallelization, b) Data manipulation through primary and secondary storage and c) Load balancing.</p>
        <p>We focus on the parallelization of functions at two levels of abstraction: Level 1 (low level) - Primitive operations like outer product, matrix multiplication, etc, available in the core R package, are addressed at low level using basic mathematical operations, due to their frequent usage. Level 2 (high level) - More, general R functions, like those in <italic>vegan</italic> CRAN package are addressed at the higher level of abstraction, namely job segmentation. Both levels can be combined to reach optimal solutions and achieve significant speed-up. Often the output of a certain function can be utilized as the input of another functions. For such sucessive function executions, level 2 parallelization allows for efficent data portability between functions. (eg. <italic>taxa2dist</italic> -&gt; <italic>taxondive</italic>).</p>
        <p>Some issues which we needed to address for this work entailed the general nature of R as a programing language. R is a single-threaded language, so we had to find alternative methods to overcome memory barriers and perform big data segmentation, as well as perform task segmentation using the multi-core system available by a cluster computing environment.</p>
        <p>The above issues were addressed primarily using MPI. MPI is a powerful, low-level tool that can provide numerous solutions for R parallelization. It provides a framework for managing communications, while the general process for utilizing MPI in SPMD (Single Program Multiple Data) can be summarized with the following steps: i) Initialize communicator(s), ii) Data input to individual processes, iii) Perform computations, iv) Communicate results, v) Shut down the communicator(s).</p>
        <p>In order to perform MPI manipulation for RvLab we adopted <italic>pbdMPI</italic> as our primary package and couple it with other parallelization solutions or code optimization. MPI is simplified through <italic>pbdMPI</italic>, whereby a single program is written and later spawned by mpirun. pbdMPI allows for spawning and broadcasting from within R under a simplified API for all functions, permitting very fast communication.</p>
        <p>Moreover, we utilized <italic>pbdR</italic> for big memory manipulations and in conjunction with pbdMPI we achieve low-level and custom parallel solutions and also allows us to benefit from Single Program Multiple Data.</p>
        <p>
          <bold>Performing profiling techniques</bold>
        </p>
        <p>In order to profile for bottlenecks (parts of the algorithm where large amounts of runtime are consumed and greater size of memory is allocated) we combine a variety of functions from several profiling packages, like <italic>profr</italic> (<xref ref-type="bibr" rid="B3007131">Wickham 2014</xref>) and <italic>proftools</italic> (<xref ref-type="bibr" rid="B3007121">Tierney and Jarjour 2016</xref>). Functions like <italic>Rprof</italic>() (for memory profiling) trace parts of the code with greater memory allocations while <italic>proftable</italic>() and <italic>lineprof</italic>(), offer profiling of R code on a line-by-line basis.</p>
        <p>
          <bold>Optimization steps and approach</bold>
        </p>
        <p>Before starting our parallelization methodology, we perform some preliminary tasks in order to distribute efficiently our effort. The first task concerns the application of profiling techniques so as to detect chunks of the algorithm according to memory consumption and computational time. Thereafter, we classify these chunks from most to least demanding. The second task requires categorization of these chunks according to their repetitions inside the code. Functions which contain repeated parts, like often usage of primitive functions, must be treated differently than functions with non-repeated occurances. A choice of low (level 1) or high (level 2) level optimization is then taken depending on whether the function contains repeated occurrences of primitive function operations or non-repeated occurrences, where parallelization of the functions is performed.</p>
        <p>The next checkpoint in the workflow depends on whether the size of the data generated by the function operations exceeds the available system RAM capacity. If the data surpasses the available RAM, we use <italic>RPostgreSQL</italic> and <italic>dplyr</italic> packages. These packages allow us to interact with external database, like <italic>PostgreSQL</italic>, in order to overcome the memory barrier. Thereafter, we combine the operation with the <italic>pbdMPI</italic> package to parallelize our function. After the expiration of the above technique we generate and retrieve the desired optimized results. In cases where available RAM is sufficient, we limit our process to <italic>pbdMPI</italic> package usage in order to decrease computational time and to optimize our results.</p>
        <p>Finally, we reconstruct our results in the appropriate format and we store them form further use or we printed on the screen. The overall pipeline for the optimization process can be seen in Fig. <xref ref-type="fig" rid="F2479955">2</xref>.</p>
        <p><bold>Example 1 Low level optimization (level 1)</bold>. One characteristic example is the parallelization of functions, such as the outer product (Suppl. material <xref ref-type="supplementary-material" rid="S2181441">1</xref>). The methodology followed is shown Fig. <xref ref-type="fig" rid="F2400462">3</xref>, aiming at allogating smaller portions of the work on different processors (Suppl. material <xref ref-type="supplementary-material" rid="S2181442">2</xref>). A similar methodology is applied on other recurrent primitive functions. The true optimization power of this example code becomes evident upon a high number of repeated executions of this code in our algorithms.</p>
        <p><bold>Example 2 High level optimization (level 2).</bold> In the example shown in Fig. <xref ref-type="fig" rid="F2400465">4</xref> we demonstrate the methodology we apply in a general function. As we seek to enhance its performance we distribute our dataset and we run our code simultaneously for this distributed dataset.</p>
        <p>
          <bold>Generic Methodology</bold>
        </p>
        <p>Our methodology for optimization aims to combine the solutions on the parallelization level with those on the database storage aspect in a harmonious manner, and not just to integrate them monolithically. More importantly, our methodology needs to be flexible enough to be adapted to the different requirements of each function. For example, it is expected that certain functions perform computationally intensive tasks on small datasets, while others iterate simple operations on big datasets or produce bi-products during their computation that are difficult to maintain in the main memory.</p>
        <p>Fig. <xref ref-type="fig" rid="F2180557">5</xref>​ presents schematically the general rationale of our methodology. Whenever computations are too demanding and/or too big to fit in main memory (RAM), they are broken down into chunks that can fit in memory. At the time of execution of a job by the cluster, each available processor is assigned to perform a part of the necessary computations. The outcome is then stored temporally in corresponding tables in the PostgreSQL database. The next chunk is brought into memory to repeat the process. If the data in the database is the final outcome of the function, as is the case with the <italic>taxa2dist</italic> function, the tables can be reconstructed and stored in a Comma Separated Values (.csv) file format. If, on the other hand, these tables are only some bi-product generated during computation, they are retrieved part by part and aggregated to carry on with the execution.</p>
        <p>It is important to note that the type of computations performed in each processor is not necessarily restricted to primitive operations, such as matrix multiplication, outer product etc. These operations have of course been redesigned to take advantage of the decomposition of data to the processors available. Still, a big asset of the RvLab offered functionalities is that they provide optimizations at higher levels of abstraction, such as in combining sequences of commonly executed <italic>vegan</italic> functions into a single one.</p>
        <p>For instance, a commonly executed workflow performed by biologists is to provide the output of the <italic>taxa2dist</italic> function, which is usually a big square matrix, as input to the <italic>taxondive</italic> function, which generates results of a small size. Both of these functions perform executions of similar operations on the same data multiple times; our enhanced function combines these two functions with a more efficient parallel algorithm that not only achieves significantly quicker execution times, as evidenced in a following section, but also overcomes the memory barriers that exist when the initial datasets are beyond a certain limit. In fact, since the output of <italic>taxa2dist</italic> does not need to be stored, our function can be used with input data of any size.</p>
        <p>
          <bold>Supported optimized RvLab functions</bold>
        </p>
        <p>A non-exhaustive list of supported RvLab functions is presented below:</p>
        <p>· <italic>taxa2dist</italic> parallel, <italic>taxa2dist</italic> (local storage), <italic>taxa2dist</italic> &gt; <italic>taxondive</italic> - The <italic>taxa2dist</italic> function returns a distance matrix from a classification aggregation file which acts as input for <italic>taxondive</italic>. The combination of these functions computes indices of taxonomic diversity and distinctness, which are averaged taxonomic distances among species or individuals in the community (<xref ref-type="bibr" rid="B2557860">Clarke and Warwick 1998</xref>, <xref ref-type="bibr" rid="B2577337">Clarke and Warwick 1999</xref>).</p>
        <p>· <italic>anosim</italic> - Analysis of similarities (ANOSIM) provides a way to test statistically whether there is a significant difference between two or more groups of sampling units. It is often used as a hypothesis test after multidimensional scaling analysis.</p>
        <p>· <italic>adonis</italic> - Analysis of variance using distance matrices in order to partition them among sources of variation and fitting linear models (e.g. factors, polynomial regression) to distance matrices. It uses a permutation test with pseudo-F ratios and it is the equivalent of PERMANOVA analysis (<xref ref-type="bibr" rid="B2577426">Anderson 2001</xref>).</p>
        <p>· <italic>mantel</italic> - Function <italic>mantel</italic> calculates the Mantel statistic as a matrix correlation between two dissimilarity matrices, and function <italic>mantel.partial</italic> computes the partial Mantel statistic as the partial matrix correlation between three dissimilarity matrices. The significance of the statistic is evaluated by permuting rows and columns of the first dissimilarity matrix.</p>
        <p>· <italic>simper</italic> - Returns a list of variables (e.g. species) that contribute to the average similarity within and average dissimilarity between groups of samples, using Bray-Curtis index or Euclidean distances.</p>
        <p>· <italic>bioenv</italic> - Returns the best subset of environmental variables, so that the Euclidean distances of scaled environmental variables have the maximum (rank) correlation with community dissimilarities.</p>
        <p>The rate statistics are computed using the formula in Suppl. material <xref ref-type="supplementary-material" rid="S2181443">3</xref>.</p>
      </sec>
      <sec sec-type="Funding">
        <title>Funding</title>
        <p>This work was supported by the LifeWatchGreece infrastructure (MIS 384676), funded by the Greek Government under the General Secretariat of Research and Technology (<ext-link ext-link-type="uri" xlink:href="http://www.gsrt.gr/">GSRT</ext-link>), ESFRI Projects, National Strategic Reference Framework (<ext-link ext-link-type="uri" xlink:href="https://www.espa.gr/">NSRF</ext-link>).</p>
      </sec>
    </sec>
    <sec sec-type="Web location (URIs)">
      <title>Web location (URIs)</title>
      <p>Homepage: <ext-link ext-link-type="uri" xlink:href="https://rvlab.portal.lifewatchgreece.eu/">https://rvlab.portal.lifewatchgreece.eu/</ext-link></p>
    </sec>
    <sec sec-type="Technical specification">
      <title>Technical specification</title>
      <p>Programming language: R, Javascript, PHP, C#</p>
      <p>Operational system: Windows or Linux or Mac</p>
      <p>Interface language: HTML, CSS, Javascript</p>
    </sec>
    <sec sec-type="Usage rights">
      <title>Usage rights</title>
      <sec sec-type="Use license">
        <title>Use license</title>
        <p>Other</p>
      </sec>
      <sec sec-type="IP rights notes">
        <title>IP rights notes</title>
        <p>MIT license</p>
      </sec>
    </sec>
    <sec sec-type="Implementation">
      <title>Implementation</title>
      <sec sec-type="Implements specification">
        <title>Implements specification</title>
        <p>In this section we describe the RvLab web application and how a user can access it through LifeWatchGreece portal. The following screenshots illustrate the web pages a user goes through when using RvLab. After registering and logging in at portal's landing page (Fig. <xref ref-type="fig" rid="F2576650">6</xref> - left image), the user comes to portal's Home Page (Fig. <xref ref-type="fig" rid="F2576650">6</xref>- right image) where direct access to RvLab (and other virtual laboratories) is available.</p>
        <p>The main interface of RvLab is comprised by four panels (Fig. <xref ref-type="fig" rid="F2576677">7</xref>). The Workspace panel (top left) allows users to upload .csv files that can be used as input and monitor their available storage space. The Functions panel (right) allows users to select a statistical function, configure it and submit a new job to run for execution. The Jobs panel (bottom left) allows the user to keep track of his submitted jobs, monitor their status, view the results or delete the ones that are not needed anymore. The Help panel contains information about RvLab and its usage policies. Example datasets (Fig. <xref ref-type="fig" rid="F3036848">8</xref>) can also be found there, if someone wants to try out RvLab without using his own input files.</p>
        <p>Once a job is completed, the user can view the results page by clicking on the Job ID link (Fig. <xref ref-type="fig" rid="F2576679">9</xref> - left image). The result page (Fig. <xref ref-type="fig" rid="F2576679">9</xref> - right image) may contain textual information (i.e. "Significance values and taxonomic indices values"), graphical results (i.e. "Taxonomic indices funnel plots") or file results. Result files can be downloaded or added to the workspace for downstream analyses and further utilization in additional RvLab functions.</p>
        <p>Screen shots showing examples of the graphical results generated by RvLab can be seen in Fig. <xref ref-type="fig" rid="F3036868">10</xref>. The interactive <italic>SUMMARIZEplot</italic> function, utilizing JavaScript Data Drive Documents (D3.js) and HTML (Fig. <xref ref-type="fig" rid="F3036868">10</xref><xref ref-type="fig" rid="F3036873">a</xref>) allows users to observe distributions of species per station in bar charts, as well as pie charts, generated from the most abundant species found in each station. The results of regression analysis, i.e. the linear model relationship between environmental factors measurements during sampling, such as maximum depth and bathythemetry, are shown in Fig. <xref ref-type="fig" rid="F3036868">10</xref><xref ref-type="fig" rid="F3036874">b</xref>. Outputs of Analysis of Variance (Anova) (Fig. <xref ref-type="fig" rid="F3036868">10</xref><xref ref-type="fig" rid="F3036875">c</xref>, left image) and Analysis of similarities (Anosim) (Fig. <xref ref-type="fig" rid="F3036868">10</xref><xref ref-type="fig" rid="F3036875">c</xref>, right image) can be used to provide statistical significance for the relationship between environmental factors selected by the user. Finally, Principal Component Analysis (PCA) showing an ordination (grouping) of stations in a lower dimensional space, given their species abundance, is presented in Fig. <xref ref-type="fig" rid="F3036868">10</xref><xref ref-type="fig" rid="F3036876">d</xref>. The user is given flexibility in assigning colour-codes according to selected factors, such as the location of the sampling stations.</p>
        <p>RvLab is developed in Hypertext Preprocessor (PHP) and has been integrated in the LifeWatchGreece portal allowing registration to the common user database used for all virtual laboratories available via the portal. This integration utilizes some background Hypertext Transfer Protocol (HTTP) communication between the portal's core and RvLab's web application that involves exchanging information regarding credentials and access control privileges. Moreover, cron jobs have been deployed to ensure that policies are enforced and job status is updated regularly through Asynchronous JavaScript and XML (AJAX) calls. Although job execution takes place on a cluster, RvLab has direct access to all job folders by mounting (through SSH) the rellevant cluster directories to the web server. RvLab uses Portable Batch System (PBS) scripts to schedule each job for execution on the cluster.</p>
        <p>
          <bold>Mobile RvLab application (mobRvLab)</bold>
        </p>
        <p>The RvLab mobile application (<ext-link ext-link-type="uri" xlink:href="https://portal.lifewatchgreece.eu/mobile_apps">mobRvLab</ext-link>) has been developed by utilizing Unity3D Platform and C# scripting language. The application is available for android and ios platforms and functions on a dynamical and autonomous basis. It receives data in json format from the LifeWatchGreece portal in real time by exploiting the appropriate web services that have been developed. Whenever data are required, a secure proper communication channel is established between the device and the portal.</p>
        <p>As previously mentioned, the RvLab is available after registration and login to the LifeWatchGreece portal. This is a pre-requisite in order the user to access mobRvLab by utilizing the same account credentials. MobRvLab employs the same functionalities adopted by the RvLab. The mobRvLab main page includes general information about the application and also displays three main tabs: “Functions”, “Files” and “Jobs”. The “Functions” tab shows all available functions, same as in the portal version. The user can select which function to run, including parallel implementations of available functions. In the “Jobs” tab the user can view a jobs log file and keep track of each job status. The jobs are presented and ordered by date. Each job can be selected for viewing results or for deletion. The “Files” tab displays the user workspace and allows file management by uploading or deletion of data files. In principle, the mobRvLab provides a direct link, via mobile access, to the RvLab user account created in the LifeWatchGreece portal; jobs are executed in the LifeWatchGreece cluster and not locally, hence allowing user access to the high performance computational resources of the cluster via mobile appplication. The user can choose to submit jobs and view results from either of the virtual laboratories, benefiting by the usability and flexibility of RvLab in data analysis, as well as by the results acquisition. Fig. <xref ref-type="fig" rid="F3036877">11</xref> displays the data exchange web services and overall functionalities of the mobRvLab.</p>
        <p>RvLab mobile application is available for download at https://portal.lifewatchgreece.eu/mobile_apps</p>
      </sec>
      <sec sec-type="Audience">
        <title>Audience</title>
        <p>The desired target audience is the average R user, without requiring expertise and prior training in the field of algorithm optimization and parallelization. However, basic statistical knowledge for using the analytical routines and for the interpretation of results is required.</p>
      </sec>
    </sec>
    <sec sec-type="Additional information">
      <title>Additional information</title>
      <sec sec-type="Experimental Evaluation">
        <title>Experimental Evaluation</title>
        <p>We conducted a series of experiments to evaluate the generic methodology described in previous sections, in order to study (i) the speedup achieved with the new functions when exploiting the resources of a multiprocessor environment and (ii) to identify optimal allocation of resources given the size of the input data. The reported times are the average of 3 runs for each configuration. They were conducted in a controlled environment, where all external access was blocked; despite being an idealized environment, this setting allowed us to reach consistent conclusions about the behaviour of the functions.</p>
        <p>
          <bold>Experimental setup</bold>
        </p>
        <p>Our experiments varied between functions requiring large amounts of memory to handle input data, as well as functions performing computationally intensive tasks. For the former category, datasets of increasing size have been used as input. The <italic>taxa2dist</italic> function, as well as the combined <italic>taxa2dist</italic>+<italic>taxondive</italic>, fall into this category, as they rely on the computation of a distance matrix that can become significantly big depending on the initial dataset. For the latter category, we varied the number of computations, namely the number of permutations that need to be executed before producing the result. For each of these cases, we measured the execution time of the parallel version of our functions when allocating a different number of processors and compared these times to the time needed to run the serial function, i.e., the version provided by the <italic>vegan</italic> package. Note that in certain cases the serial version could not be executed at all, e.g., when the available memory was not enough to handle computations.</p>
        <p>All experiments were conducted on a cluster involving 10 Intel Xeon CPU E5-2667 2.9GHz cores with a total of 384Gb RAM. We measured times by allocating 1, 2, 4, 6, 8 or 10 CPUs to the parallel functions, in order to study their behaviour. The results are presented through a series of diagrams which are based on a comparative analysis; absolute timing is mentioned only for verification. Although the current version of the RvLab portal runs over a cluster having a different configuration, the messages conveyed by our experimental analysis are still valid, as we are not interested in the absolute times measured, but rather on the speed up that can be achieved.</p>
        <p>
          <bold>Experiment 1. <italic>taxa2dist</italic></bold>
        </p>
        <p>The diagram in Fig. <xref ref-type="fig" rid="F2920771">12</xref> shows the speedup achieved by running the parallel implementation of the <italic>taxa2dist</italic> function in comparison to the serial one, for datasets having approximately 1,700 lines of species (small), 16,900 lines (medium) and 42,300 lines (large), respectively. Specifically, the black line at 1x sets the boundary in speedup, as it denotes the execution of the serial program itself. Obviously, no matter how many processors we assign to this program, the execution time stays the same since no parallelization of operations is possible within its code. For example, with the small dataset as input, the execution time was 5.1 sec on average with 1 CPU and 5.0 sec with 10 CPUs; for the large dataset, these times where 21.2 min and 21.1 min, respectively. We can safely conclude that the number of processors do not significantly affect the serial program.</p>
        <p>Any values below the 1x boundary denote execution times proportially higher to the serial ones, whereas values above the boundary denote how many times faster the execution was found to be. As mentioned above, we measured our parallel program having different allocations of processors, in order to check at which setting the maximum speedup is achieved. In other words, the diagram shows the behaviour (i.e., speedup) of the parallel program in comparison to the serial one (vertical axis) given two parameters, the number of processors assigned to the program (horizontal axis) and the size of the input data (colored lines).</p>
        <p>A first observation that can be made is that for small datasets the serial version is somewhat faster than the parallel one. This is displayed by the points lying below the 1x threshold. Indicatively, while the serial version required 5.1 sec on average to run the small dataset as mentioned before, the parallel version with 2 CPUs needed 6.2 sec and with 4 CPUs 7.3 sec. For such small datasets, the differences in absolute times are very small, therefore any delays introduced due to the initialization of the cluster seem to play an important role.</p>
        <p>The situation changes as the input dataset becomes bigger, where the parallel version is faster in many cases. For example, with 4 CPUs the parallel version required 2.14 min for the medium dataset and 14.5 min for the large one, whereas the serial version needed 3.4 min and 21.2 min, respectively.</p>
        <p>Nevertheless, speedup decreases as we add more CPUs. This observation verifies a conclusion already known in the ICT community: the parallel solution is not panacea and proper allocation of resources needs to be made not only based on their availability, but also on other parameters, such as the size of the input in our case. It seems that the cost of communicating data between processors becomes considerable as we add more processors.</p>
        <p>It should be noted here that none of the aforementioned functions was able to operate with datasets of larger size, due to memory overflow. For such datasets, one needs to revert to the PostgreSQL variation that stores data on secondary memory, which inevitably takes much longer times to execute.</p>
        <p>
          <bold>Experiment 2. <italic>taxa2dist</italic>+<italic>taxondive</italic></bold>
        </p>
        <p>Since the output of <italic>taxa2dist</italic> is very often used as input to the <italic>taxondive</italic> function, we implemented the parallel version that combines the two, as described in a previous section. The <italic>taxondive</italic> computes indices of taxonomic diversity and distinctness, which are averaged taxonomic distances among species or individuals in the community (<xref ref-type="bibr" rid="B2557860">Clarke and Warwick 1998</xref>). This function has the added advantage that it manages to overcome memory barriers: due to the algorithmic structure of these functions, one can break the huge bi-products of <italic>taxa2dist</italic> into portions and complete the execution in an incremental manner.</p>
        <p>Fig. <xref ref-type="fig" rid="F2921149">13</xref> shows the results obtained, revealing impressive speedups. For instance, while the <italic>vegan</italic> functions require 4.1 hours to execute the large dataset, the parallel version, when exploiting all 10 CPUs of the cluster, manages to reduce this time to 20 min on average. Even for the smallest dataset, where the serial version needs 20.5 sec, the parallel version runs faster, takeing 6.6 sec with 4 CPUs and 4.4 sec with 10 CPUs. One reason for obtaining these results is the more efficient redefinition of the functions made when rewriting the code: we reduced the work needed by avoiding duplicate calculations of operations that exist in the <italic>vegan</italic> (serial) code of both the <italic>taxa2dist</italic> and <italic>taxondive</italic> functions, and we utilized the same structures, wherever possible.</p>
        <p>What is even more impressive is that we even managed to run datasets of much larger sizes that cannot be executed otherwise: indicatively, we managed to complete the calculation of the <italic>taxa2dist+taxondive</italic> function for an input dataset having 168,931 lines of species in 6.6 hours when allocating 10CPUs.</p>
        <p>
          <bold>Experiment 3. <italic>anosim</italic></bold>
        </p>
        <p>The next set of experiments concentrated on the <italic>anosim</italic> function. The preliminary profiling tests we performed showed that the main issues one needs to tackle are concentrated on the consumption of time and not on memory overflow. This time consumption is strongly correlated with the number of “permutations” we introduce to the function.</p>
        <p>As we see in Fig. <xref ref-type="fig" rid="F2479957">14</xref>, as we provide more processors to the parallel version, the execution becomes faster. Another conclusion is that the number of permutations are counter analogous to the algorithm’s running time, but we obtain higher speed up as we increase the number of allocated processors for the increased amount of permutations. This experiment was conducted with a 9 Mb dataset as input .</p>
        <p>The above diagram (Fig. <xref ref-type="fig" rid="F2479957">14</xref>) suggests that the parallel version with 10 processors completes up to 24 times faster the calculations in comparison to the serial anosim; more specifically, it needs only 1.1 sec as compared to 27 sec. Also, every parallel version is faster than the serial one, apart from the case where the available processors are less than 2. Also, when we have 10<sup>7</sup> – 1 permutations (orange broken line), the parallel version is faster than the serial.</p>
        <p>In Fig. <xref ref-type="fig" rid="F2920343">15</xref>, for larger datasets, we notice that most parallel versions improve the computational time, except for the case with 10<sup>3</sup> – 1 permutations and with the number of processors being less than 8. The parallel version with 10<sup>4</sup> – 1 permutations has neglectable difference with respect to the serial one up until 8 processors. The maximum optimization we achieve is 13 times with 10 processors, from 5.8 min to 28.9 sec. This experiment used a 230 Mb dataset.</p>
        <p>
          <bold>Experiment 4. <italic>adonis</italic></bold>
        </p>
        <p>Our profiling tests with the <italic>adonis</italic> function revealed that no memory issues are likely to be met in this case; instead, the main bottleneck that should concern us is the scaling of computation effort. The dominant factor of time consumption is the number of permutations set as input to the function, therefore we broke the task of computing them into chunks to be assigned to each of the available processors.</p>
        <p>Fig. <xref ref-type="fig" rid="F2479959">16</xref> shows the speed up gains of the parallel versions. It is evident that the number of processors assigned, directly affects the speed up in each version. Also the number of permutations are counter analogous to the total computation time. As we increase the number of available processors the computational time is reduced up to 12 times compared to the serial version: for example, the serial version requires 8.1 min and the parallel with 10 processors 40 seconds for 10<sup>7</sup> – 1 number of permutations. Another interesting observation from the diagram is that the execution of parallel computations with a small number of permutations (e.g., less than 10<sup>4</sup>) is not faster than the serial on (black line with circles) despite the resources allocated.</p>
        <p>
          <bold>Experiment 5. <italic>simper</italic></bold>
        </p>
        <p>Similarly to the <italic>anosim</italic> and <italic>adonis</italic> functions, the <italic>simper</italic> function also relies on the number of computations requested and not on the available memory. As before, we break the permutations into chunks which are assigned to the available processors.</p>
        <p>Fig. <xref ref-type="fig" rid="F2479971">17</xref> shows the speed up gains implementing the parallel versions. The number of processors is analogous to the speed up in each version. Also the number of permutations are counter analogous to the total computation time, but as we increase the number of available processors the computation time falls up to 5 times compared to the serial version. For instance, the serial version needs 11 sec and the parallel with 10 processors 2 sec, for 10<sup>4</sup> – 1 number of permutations.</p>
        <p>As we already observed in the experiments with the previous functions, we notice again here that when the number of permutations is small parallelization is not always beneficial: in fact, increasing the number of processors may hinder performance, due to the communication costs involved.</p>
        <p>
          <bold>Experiment 6. <italic>mantel</italic></bold>
        </p>
        <p>Similarly to the previous functions, the <italic>mantel</italic> function relies on recurrent computations without producing any memory leakage or overflow. These recurrent computations depend on the number of permutation.</p>
        <p>For further investigation we performed two classes of experiments, one for a small input dataset, 9 Mb, and one for a large input dataset, 230 Mb. The diagrams in Figs <xref ref-type="fig" rid="F2479967">18</xref>, <xref ref-type="fig" rid="F2479969">19</xref> show that the behaviour of both experiments follow the same principles as the experiments for the previous functions.</p>
        <p>In Fig. <xref ref-type="fig" rid="F2479967">18</xref>, for the small dataset, as long as we assign less than 8 processors all parallel efforts are less efficient than the serial mantel. Beyond this threshold, we notice a speed up increase and the parallel version outperforms the serial one (black circled line). Finally, using all 10 processors we reach the maximum speed up.</p>
        <p>In Fig. <xref ref-type="fig" rid="F2479969">19</xref>, for large dataset, all parallel versions improve the computational time. The maximum speed up gain is 15 times, for the parallel version with 10 processors, namely 1.2 sec instead of 20.2 sec for the serial mantel.</p>
        <p>
          <bold>Experiment 7. <italic>bioenv</italic></bold>
        </p>
        <p><italic>Bioenv</italic> also depends on repeated computations. The main difference with the previous approach is that instead of breaking the permutation’s linked computations into chunks, we break the ncol’s linked computations. This modification came along with a limitation. The limitation suggests that it is not useful to use more processors than the number of ncol.</p>
        <p>In Fig. <xref ref-type="fig" rid="F2479975">20</xref> we report results from an experiment with a dataset with 1 ≤ ncol ≤ 8. As long as we increase both the ncol parameter and the number of processors the speed up increased. The <italic>bioenv</italic> serial version is faster than all parallel versions for ncol = 1. After that, the limitation verified from the results, i.e., the experiment with ncol = 4 reaches 2 times speed up, for 4 processors, with respect to the serial <italic>bioenv</italic>, but if we increase further the number of processors the speed up decreases and converges to 0. A general conclusion drawn from Fig. <xref ref-type="fig" rid="F2479975">20</xref> is that we gain the maximum speed up when the number of available processors becomes equal with the number of ncol. Consequently, the maximum speed up we can gain is about 4 times for the parallel version with 8 processors when ncol = 8, namely we decrease the consumption time from 4.9 sec (serial version) to 1.2 sec (8 processors for ncol = 8).</p>
      </sec>
      <sec sec-type="Outlook and Future Work">
        <title>Outlook and Future Work</title>
        <p>Future implementations of the RvLab will include additional functions that are important for environmental ecology, biodiversity, fisheries and modelling. The RvLab has the possibility to incorporate a variety of functions and R packages, apart from the ones already implemented, should the user contact the development team with a relevant request. Moreover, we are currently also investigating issues of assigning jobs as a function of available resources in order to ensure optimal core distribution and function execution for all jobs submitted to RvLab.</p>
      </sec>
      <sec sec-type="Conclusions">
        <title>Conclusions</title>
        <p>The RvLab is a very useful and powerful tool, both for users who are already familiar with R (and some of its functions) but also for students and/or scientists who are in favour of open source software and would like to dedicate some time to get familiar with its functions, without having to go through the steep command line R learning curve.</p>
        <p>When compared with online virtual environments, such as the "Multivariate AnalysiS Applications for Microbial Ecology (<ext-link ext-link-type="uri" xlink:href="http://mb3is.megx.net/eatme/">MASAME</ext-link>)" suite, apart from the intrinsic similarities between the two platforms, it is obvious that the RvLab can implement a plethora of functions, some of which are parallelized. Thus, the user can benefit from the availability of newly designed functions if the dataset to be analysed requires their implementation.</p>
        <p>The accessibility of RvLab is also one of its major advantages; apart from being part of the LifeWatchGreece Infrastructure, it is also a part of the <ext-link ext-link-type="uri" xlink:href="http://marine.lifewatch.eu/">LifeWatch Marine Virtual Research Environment (VRE)</ext-link>. The LifeWatch Marine Virtual Research Environment (VRE) portal is bringing together several marine resources, databases, data systems, web services, tools, etc. into one marine virtual research environment, allowing researchers to retrieve and access a great variety of data resources and tools.</p>
        <p>In addition, the RvLab is an interactive virtual laboratory; should the user require other types of functions, these can be added in the "laboratory" and become available online in a short time. Therefore, the more users are logging in the portal and using it for their analyses, the more they can improve the RvLab, given the enormous possibilities of its programming language.</p>
      </sec>
      <sec sec-type="Appendix">
        <title>Appendix</title>
        <p>The source code for the functions is available for download at the <ext-link ext-link-type="uri" xlink:href="https://rvlab.portal.lifewatchgreece.eu/">RvLab</ext-link>.</p>
      </sec>
    </sec>
  </body>
  <back>
    <ack>
      <title>Acknowledgements</title>
      <p>The authors would like to thank the <ext-link ext-link-type="uri" xlink:href="https://www.lifewatchgreece.eu/?q=content/core-team">LifeWatchGreece</ext-link> <ext-link ext-link-type="uri" xlink:href="https://www.lifewatchgreece.eu/?q=content/core-team">core team</ext-link> for constructive and informative discussions and for their valuable input to issues regarding RvLab. This work was supported by the LifeWatchGreece infrastructure (MIS 384676), funded by the Greek Government under the General Secretariat of Research and Technology (<ext-link ext-link-type="uri" xlink:href="http://www.gsrt.gr/">GSRT</ext-link>), ESFRI Projects, National Strategic Reference Framework (<ext-link ext-link-type="uri" xlink:href="https://www.espa.gr/">NSRF</ext-link>).</p>
    </ack>
    <notes>
      <sec sec-type="Author contributions">
        <title>Author contributions</title>
        <p>CV and TP contributed to the analysis, parallelization and evaluation of the functions. AO and AG contributed to the overall design and implementations of the graphical interface. UZI, NP, AFG and SF provided code for functions implemented at the RvLab. IF designed the mobile application. CB, MD and CA had the initial idea for the creation of the RvLab. CV, TP, AO, CP, EC, EP, EVB, SF and CA contributed to the write-up and proofreading of the manuscript.</p>
      </sec>
    </notes>
    <ref-list>
      <title>References</title>
      <ref id="B2577426">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Anderson</surname>
              <given-names>Marti J.</given-names>
            </name>
          </person-group>
          <year>2001</year>
          <article-title>A new method for non-parametric multivariate analysis of variance</article-title>
          <source>Austral Ecology</source>
          <volume>26</volume>
          <issue>1</issue>
          <fpage>32</fpage>
          <lpage>46</lpage>
          <uri>https://doi.org/10.1111/j.1442-9993.2001.01070.pp.x</uri>
          <pub-id pub-id-type="doi">10.1111/j.1442-9993.2001.01070.pp.x</pub-id>
        </element-citation>
      </ref>
      <ref id="B2588802">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Buttigieg</surname>
              <given-names>Pier Luigi</given-names>
            </name>
            <name name-style="western">
              <surname>Ramette</surname>
              <given-names>Alban</given-names>
            </name>
          </person-group>
          <year>2014</year>
          <article-title>A guide to statistical analysis in microbial ecology: a community-focused, living review of multivariate data analyses</article-title>
          <source>FEMS Microbiology Ecology</source>
          <volume>90</volume>
          <issue>3</issue>
          <fpage>543</fpage>
          <lpage>550</lpage>
          <uri>https://doi.org/10.1111/1574-6941.12437</uri>
          <pub-id pub-id-type="doi">10.1111/1574-6941.12437</pub-id>
        </element-citation>
      </ref>
      <ref id="B2555019">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Canhos</surname>
              <given-names>Vanderlei Perez</given-names>
            </name>
            <name name-style="western">
              <surname>de Souza</surname>
              <given-names>Sidnei</given-names>
            </name>
            <name name-style="western">
              <surname>de Giovanni</surname>
              <given-names>Renato</given-names>
            </name>
            <name name-style="western">
              <surname>Canhos</surname>
              <given-names>Dora Ann Lange</given-names>
            </name>
          </person-group>
          <year>2004</year>
          <article-title>Global Biodiversity Informatics: setting the scene for a “new world” of ecological forecasting</article-title>
          <source>Biodiversity Informatics</source>
          <volume>1</volume>
          <fpage>1</fpage>
          <uri>https://doi.org/10.17161/bi.v1i0.3</uri>
          <pub-id pub-id-type="doi">10.17161/bi.v1i0.3</pub-id>
        </element-citation>
      </ref>
      <ref id="B3292691">
        <element-citation publication-type="website">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Chen</surname>
              <given-names>W. -C.</given-names>
            </name>
            <name name-style="western">
              <surname>Ostrouchov</surname>
              <given-names>G.</given-names>
            </name>
            <name name-style="western">
              <surname>Schmidt</surname>
              <given-names>D.</given-names>
            </name>
            <name name-style="western">
              <surname>Patel</surname>
              <given-names>P.</given-names>
            </name>
            <name name-style="western">
              <surname>Yu</surname>
              <given-names>H.</given-names>
            </name>
          </person-group>
          <article-title>pbdMPI: Programming with Big Data -- Interface to MPI. R Package</article-title>
          <uri>http://cran.r-project.org/package=pbdMPI</uri>
        </element-citation>
      </ref>
      <ref id="B2557860">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Clarke</surname>
              <given-names>K. R.</given-names>
            </name>
            <name name-style="western">
              <surname>Warwick</surname>
              <given-names>R. M.</given-names>
            </name>
          </person-group>
          <year>1998</year>
          <article-title>A taxonomic distinctness index and its statistical properties</article-title>
          <source>Journal of Applied Ecology</source>
          <volume>35</volume>
          <issue>4</issue>
          <fpage>523</fpage>
          <lpage>531</lpage>
          <uri>https://doi.org/10.1046/j.1365-2664.1998.3540523.x</uri>
          <pub-id pub-id-type="doi">10.1046/j.1365-2664.1998.3540523.x</pub-id>
        </element-citation>
      </ref>
      <ref id="B2577337">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Clarke</surname>
              <given-names>K. R.</given-names>
            </name>
            <name name-style="western">
              <surname>Warwick</surname>
              <given-names>R. M.</given-names>
            </name>
          </person-group>
          <year>1999</year>
          <article-title>The taxonomic distinctness measure of biodiversity:weighting of step lengths between hierarchical levels</article-title>
          <source>Marine Ecology Progress Series</source>
          <volume>184</volume>
          <fpage>21</fpage>
          <lpage>29</lpage>
          <uri>https://doi.org/10.3354/meps184021</uri>
          <pub-id pub-id-type="doi">10.3354/meps184021</pub-id>
        </element-citation>
      </ref>
      <ref id="B3007193">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Conway</surname>
              <given-names>Joe</given-names>
            </name>
            <name name-style="western">
              <surname>Eddelbuettel</surname>
              <given-names>Dirk</given-names>
            </name>
            <name name-style="western">
              <surname>Nishiyama</surname>
              <given-names>Tomoaki</given-names>
            </name>
            <name name-style="western">
              <surname>Prayaga</surname>
              <given-names>Sameer Kumar</given-names>
            </name>
            <name name-style="western">
              <surname>Tiffin</surname>
              <given-names>Neil</given-names>
            </name>
          </person-group>
          <year>2013</year>
          <article-title>RPostgreSQL: R interface to the PostgreSQL database system</article-title>
          <source>N/A</source>
          <volume>N/A</volume>
          <fpage>N/A</fpage>
          <uri>http://CRAN.R-project.org/package=RPostgreSQL</uri>
        </element-citation>
      </ref>
      <ref id="B3007109">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Kane</surname>
              <given-names>Michael J.</given-names>
            </name>
            <name name-style="western">
              <surname>Emerson</surname>
              <given-names>John</given-names>
            </name>
            <name name-style="western">
              <surname>Weston</surname>
              <given-names>Stephen</given-names>
            </name>
          </person-group>
          <year>2013</year>
          <article-title>Scalable Strategies for Computing with Massive Data</article-title>
          <source>Journal of Statistical Software</source>
          <volume>55</volume>
          <issue>14</issue>
          <fpage>1</fpage>
          <lpage>19</lpage>
          <uri>https://doi.org/10.18637/jss.v055.i14</uri>
          <pub-id pub-id-type="doi">10.18637/jss.v055.i14</pub-id>
        </element-citation>
      </ref>
      <ref id="B2555048">
        <element-citation publication-type="book">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Oksanen</surname>
              <given-names>Jari</given-names>
            </name>
            <name name-style="western">
              <surname>Blanchet</surname>
              <given-names>Guillaume F</given-names>
            </name>
            <name name-style="western">
              <surname>Kindt</surname>
              <given-names>Roeland</given-names>
            </name>
            <name name-style="western">
              <surname>Legendre</surname>
              <given-names>Pierre</given-names>
            </name>
            <name name-style="western">
              <surname>Minchin</surname>
              <given-names>Peter R</given-names>
            </name>
            <name name-style="western">
              <surname>O'Hara</surname>
              <given-names>R B</given-names>
            </name>
            <name name-style="western">
              <surname>Simpson</surname>
              <given-names>Gavin L</given-names>
            </name>
            <name name-style="western">
              <surname>Solymos</surname>
              <given-names>Peter</given-names>
            </name>
            <name name-style="western">
              <surname>Stevens</surname>
              <given-names>M Henry H</given-names>
            </name>
            <name name-style="western">
              <surname>Wagner</surname>
              <given-names>Helene</given-names>
            </name>
          </person-group>
          <year>2015</year>
          <source>vegan: Community Ecology Package, R package version 2.3-0</source>
          <publisher-name>N/A</publisher-name>
          <size units="page">N/A</size>
          <uri>http://CRAN.R-project.org/package=vegan</uri>
        </element-citation>
      </ref>
      <ref id="B3007066">
        <element-citation publication-type="conference-preoceeding">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Ostrouchov</surname>
              <given-names>G.</given-names>
            </name>
            <name name-style="western">
              <surname>Chen</surname>
              <given-names>W. -C.</given-names>
            </name>
            <name name-style="western">
              <surname>Schmidt</surname>
              <given-names>D.</given-names>
            </name>
            <name name-style="western">
              <surname>Patel</surname>
              <given-names>P.</given-names>
            </name>
          </person-group>
          <year>2012</year>
          <source>Programming with Big Data in R</source>
          <size units="page">online</size>
          <uri>http://r-pbd.org/</uri>
        </element-citation>
      </ref>
      <ref id="B2553788">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Oulas</surname>
              <given-names>Anastasis</given-names>
            </name>
            <name name-style="western">
              <surname>Pavloudi</surname>
              <given-names>Christina</given-names>
            </name>
            <name name-style="western">
              <surname>Polymenakou</surname>
              <given-names>Paraskevi</given-names>
            </name>
            <name name-style="western">
              <surname>Pavlopoulos</surname>
              <given-names>Georgios A</given-names>
            </name>
            <name name-style="western">
              <surname>Papanikolaou</surname>
              <given-names>Nikolas</given-names>
            </name>
            <name name-style="western">
              <surname>Kotoulas</surname>
              <given-names>Georgios</given-names>
            </name>
            <name name-style="western">
              <surname>Arvanitidis</surname>
              <given-names>Christos</given-names>
            </name>
            <name name-style="western">
              <surname>Iliopoulos</surname>
              <given-names>Ioannis</given-names>
            </name>
          </person-group>
          <year>2015</year>
          <article-title>Metagenomics: Tools and Insights for Analyzing Next-Generation Sequencing Data Derived from Biodiversity Studies</article-title>
          <source>Bioinformatics and Biology Insights</source>
          <volume>9</volume>
          <fpage>75</fpage>
          <lpage>88</lpage>
          <uri>https://doi.org/10.4137/bbi.s12462</uri>
          <pub-id pub-id-type="doi">10.4137/bbi.s12462</pub-id>
        </element-citation>
      </ref>
      <ref id="B2555009">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Petrovskii</surname>
              <given-names>S.</given-names>
            </name>
            <name name-style="western">
              <surname>Petrovskaya</surname>
              <given-names>N.</given-names>
            </name>
          </person-group>
          <year>2012</year>
          <article-title>Computational ecology as an emerging science</article-title>
          <source>Interface Focus</source>
          <volume>2</volume>
          <issue>2</issue>
          <fpage>241</fpage>
          <lpage>254</lpage>
          <uri>https://doi.org/10.1098/rsfs.2011.0083</uri>
          <pub-id pub-id-type="doi">10.1098/rsfs.2011.0083</pub-id>
        </element-citation>
      </ref>
      <ref id="B2555039">
        <element-citation publication-type="book">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Team</surname>
              <given-names>R Core</given-names>
            </name>
          </person-group>
          <year>2013</year>
          <source>R: A language and environment for statistical computing</source>
          <publisher-name>R Foundation for Statistical Computing</publisher-name>
          <publisher-loc>Vienna, Austria</publisher-loc>
          <size units="page">N/A</size>
          <uri>http://www.R-project.org/</uri>
        </element-citation>
      </ref>
      <ref id="B3007097">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Schmidt</surname>
              <given-names>D.</given-names>
            </name>
            <name name-style="western">
              <surname>Chen</surname>
              <given-names>W. -C.,</given-names>
            </name>
            <name name-style="western">
              <surname>Ostrouchov</surname>
              <given-names>G.</given-names>
            </name>
            <name name-style="western">
              <surname>Patel</surname>
              <given-names>P.</given-names>
            </name>
          </person-group>
          <year>2012</year>
          <article-title>pbdDMAT: Distributed Matrix Algebra Computation. R Package, URL <ext-link ext-link-type="uri" xlink:href="http://cran.r-project.org/package=pbdDMAT">http://cran.r-project.org/package=pbdDMAT</ext-link></article-title>
          <source>N/A</source>
          <volume>N/A</volume>
          <fpage>N/A</fpage>
          <uri>http://cran.r-project.org/package=pbdDMAT</uri>
        </element-citation>
      </ref>
      <ref id="B2555029">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Soberon</surname>
              <given-names>J.</given-names>
            </name>
            <name name-style="western">
              <surname>Peterson</surname>
              <given-names>T.</given-names>
            </name>
          </person-group>
          <year>2004</year>
          <article-title>Biodiversity informatics: managing and applying primary biodiversity data</article-title>
          <source>Philosophical Transactions of the Royal Society B: Biological Sciences</source>
          <volume>359</volume>
          <issue>1444</issue>
          <fpage>689</fpage>
          <lpage>698</lpage>
          <uri>https://doi.org/10.1098/rstb.2003.1439</uri>
          <pub-id pub-id-type="doi">10.1098/rstb.2003.1439</pub-id>
        </element-citation>
      </ref>
      <ref id="B3007121">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Tierney</surname>
              <given-names>Luke</given-names>
            </name>
            <name name-style="western">
              <surname>Jarjour</surname>
              <given-names>Riad</given-names>
            </name>
          </person-group>
          <year>2016</year>
          <article-title>proftools: Profile Output Processing Tools for R.</article-title>
          <source>N/A</source>
          <volume>N/A</volume>
          <fpage>N/A</fpage>
          <uri>http://CRAN.R-project.org/package=proftools</uri>
        </element-citation>
      </ref>
      <ref id="B3007166">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Tierney</surname>
              <given-names>Luke</given-names>
            </name>
            <name name-style="western">
              <surname>Rossini</surname>
              <given-names>A. J.</given-names>
            </name>
            <name name-style="western">
              <surname>Li</surname>
              <given-names>Na</given-names>
            </name>
            <name name-style="western">
              <surname>Sevcikova</surname>
              <given-names>H.</given-names>
            </name>
          </person-group>
          <year>2015</year>
          <article-title>snow: Simple Network of Workstations</article-title>
          <source>N/A</source>
          <volume>N/A</volume>
          <fpage>N/A</fpage>
          <uri>http://CRAN.R-project.org/package=snow</uri>
        </element-citation>
      </ref>
      <ref id="B3007211">
        <element-citation publication-type="conference-preoceeding">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Urbanek</surname>
              <given-names>S</given-names>
            </name>
          </person-group>
          <year>2009</year>
          <source>multicore: Parallel processing of R code on machines with multiple cores or CPUs</source>
          <size units="page">online</size>
          <uri>https://cran.r-project.org/package=multicore</uri>
        </element-citation>
      </ref>
      <ref id="B3007131">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Wickham</surname>
              <given-names>Hadley</given-names>
            </name>
          </person-group>
          <year>2014</year>
          <article-title>profr: An alternative display for profiling information.</article-title>
          <source>N/A</source>
          <volume>N/A</volume>
          <fpage>N/A</fpage>
          <uri>http://CRAN.R-project.org/package=profr</uri>
        </element-citation>
      </ref>
      <ref id="B3007156">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Wickham</surname>
              <given-names>Hadley</given-names>
            </name>
            <name name-style="western">
              <surname>Francois</surname>
              <given-names>Romain</given-names>
            </name>
          </person-group>
          <year>2015</year>
          <article-title>dplyr: A Grammar of Data Manipulation</article-title>
          <source>N/A</source>
          <volume>N/A</volume>
          <fpage>N/A</fpage>
          <uri>http://CRAN.R-project.org/package=dplyr</uri>
        </element-citation>
      </ref>
      <ref id="B3007041">
        <element-citation publication-type="article">
          <person-group person-group-type="author">
            <name name-style="western">
              <surname>Yu</surname>
              <given-names>H.</given-names>
            </name>
          </person-group>
          <year>2002</year>
          <article-title>Rmpi: Parallel Statistical Computing in R</article-title>
          <source>R News</source>
          <volume>2</volume>
          <issue>2</issue>
          <fpage>10</fpage>
          <lpage>14</lpage>
          <uri>http://cran.r-project.org/doc/Rnews/Rnews_2002-2.pdf</uri>
        </element-citation>
      </ref>
    </ref-list>
  </back>
  <floats-group>
    <fig id="F2461855" position="float" orientation="portrait">
      <label>Figure 1.</label>
      <caption>
        <p>The general architecture design to approach the development of the LifeWatchGreece RvLab.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g001.jpg" position="float" id="oo_80159.jpg" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2479955" position="float" orientation="portrait">
      <label>Figure 2.</label>
      <caption>
        <p>The overall pipeline for the optimization process.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g002.png" position="float" id="oo_70402.PNG" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2400462" position="float" orientation="portrait">
      <label>Figure 3.</label>
      <caption>
        <p>Example of Low level optimization (level 1) applied to multiple and recurrent primitive functions.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g003.png" position="float" id="oo_75761.PNG" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2400465" position="float" orientation="portrait">
      <label>Figure 4.</label>
      <caption>
        <p>Example of High level optimization (level 2) applied in general functions.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g004.png" position="float" id="oo_75762.PNG" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2180557" position="float" orientation="portrait">
      <label>Figure 5.</label>
      <caption>
        <p>Methodology adopted for operations with memory leakage.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g005.png" position="float" id="oo_64058.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2576650" position="float" orientation="portrait">
      <label>Figure 6.</label>
      <caption>
        <p>Screenshot of portal's landing (left image) and home page (right image) available via the LifeWatchGreece portal, displaying basic information on all virtual laboratories (including RvLab).</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g006.png" position="float" id="oo_76876.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2576677" position="float" orientation="portrait">
      <label>Figure 7.</label>
      <caption>
        <p>The RvLab main interface.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g007.png" position="float" id="oo_76875.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig-group id="F3036848" position="float" orientation="portrait">
      <caption>
        <p>Basic file formats supported by RvLab:</p>
      </caption>
      <fig id="F3036853" position="float" orientation="portrait">
        <label>Figure 8a.</label>
        <caption>
          <p>Aggregation file.</p>
        </caption>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g008_a.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79399.png"/>
      </fig>
      <fig id="F3036854" position="float" orientation="portrait">
        <label>Figure 8b.</label>
        <caption>
          <p>Environmental data file (quantitative).</p>
        </caption>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g008_b.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79404.png"/>
      </fig>
      <fig id="F3036855" position="float" orientation="portrait">
        <label>Figure 8c.</label>
        <caption>
          <p>Abundance matrix.</p>
        </caption>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g008_c.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79401.png"/>
      </fig>
      <fig id="F3036856" position="float" orientation="portrait">
        <label>Figure 8d.</label>
        <caption>
          <p>Factor file (qualitative).</p>
        </caption>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g008_d.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79403.png"/>
      </fig>
    </fig-group>
    <fig id="F2576679" position="float" orientation="portrait">
      <label>Figure 9.</label>
      <caption>
        <p>The results page of RvLab.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g009.png" position="float" id="oo_76872.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig-group id="F3036868" position="float" orientation="portrait">
      <caption>
        <p>Screen shots showing a few of the graphical results generated by RvLab functions.</p>
      </caption>
      <fig id="F3036873" position="float" orientation="portrait">
        <label>Figure 10a.</label>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g010_a.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79407.png"/>
      </fig>
      <fig id="F3036874" position="float" orientation="portrait">
        <label>Figure 10b.</label>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g010_b.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79408.png"/>
      </fig>
      <fig id="F3036875" position="float" orientation="portrait">
        <label>Figure 10c.</label>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g010_c.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79409.png"/>
      </fig>
      <fig id="F3036876" position="float" orientation="portrait">
        <label>Figure 10d.</label>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g010_d.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79410.png"/>
      </fig>
    </fig-group>
    <fig-group id="F3036877" position="float" orientation="portrait">
      <caption>
        <p>Mobile RvLab application web services and screen shots.</p>
      </caption>
      <fig id="F3036882" position="float" orientation="portrait">
        <label>Figure 11a.</label>
        <caption>
          <p>Data exchange web services between portal and mobile RvLab versions.</p>
        </caption>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g011_a.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79416.png"/>
      </fig>
      <fig id="F3036883" position="float" orientation="portrait">
        <label>Figure 11b.</label>
        <caption>
          <p>Overall workflow of the mobRvLab interface.</p>
        </caption>
        <graphic xlink:href="biodiversity_data_journal-4-e8357-g011_b.png" xlink:type="simple" position="float" orientation="portrait" id="oo_79417.png"/>
      </fig>
    </fig-group>
    <fig id="F2920771" position="float" orientation="portrait">
      <label>Figure 12.</label>
      <caption>
        <p>Computational results about optimization in <italic>taxa2dist's</italic> performance, considering the number of processors (x-axis) and the size of the input data.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g012.png" position="float" id="oo_76880.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2921149" position="float" orientation="portrait">
      <label>Figure 13.</label>
      <caption>
        <p>Computational results about optimization in <italic>taxa2dist+taxondive's</italic> performance, considering the number of processors (x-axis) and the size of the input data.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g013.png" position="float" id="oo_76881.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2479957" position="float" orientation="portrait">
      <label>Figure 14.</label>
      <caption>
        <p>Computational results about optimization in <italic>anosim's</italic> performance, depending on permuations and number of processors (np), for small datasets.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g014.png" position="float" id="oo_76882.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2920343" position="float" orientation="portrait">
      <label>Figure 15.</label>
      <caption>
        <p>Computational results about optimization in <italic>anosim's</italic> performance, depending on permuations and number of processors (np), for large datasets.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g015.png" position="float" id="oo_76883.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2479959" position="float" orientation="portrait">
      <label>Figure 16.</label>
      <caption>
        <p>Computational results about optimization in the performance of <italic>adonis</italic>, depending on permuations and number of processors (np).</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g016.png" position="float" id="oo_76887.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2479971" position="float" orientation="portrait">
      <label>Figure 17.</label>
      <caption>
        <p>Computational results about optimization in <italic>simper's</italic> performance, depending on permutations and number of processors (np).</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g017.png" position="float" id="oo_76888.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2479967" position="float" orientation="portrait">
      <label>Figure 18.</label>
      <caption>
        <p>Computational results about optimization in <italic>mantel's</italic> performance, depending on permuations and number of processors (np), for small datasets.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g018.png" position="float" id="oo_76889.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2479969" position="float" orientation="portrait">
      <label>Figure 19.</label>
      <caption>
        <p>Computational results about optimization in <italic>mantel's</italic> performance, depending on permuations and number of processors (np), for large datasets.</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g019.png" position="float" id="oo_76890.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <fig id="F2479975" position="float" orientation="portrait">
      <label>Figure 20.</label>
      <caption>
        <p>Computational results about optimization in <italic>bioenv's</italic> performance, depending on number of columns and number of processors (np).</p>
      </caption>
      <graphic xlink:href="biodiversity_data_journal-4-e8357-g020.png" position="float" id="oo_76891.png" orientation="portrait" xlink:type="simple"/>
    </fig>
    <supplementary-material id="S2181441" orientation="portrait" position="float" xlink:type="simple">
      <label>Supplementary material 1</label>
      <caption>
        <p>Matrix 1</p>
      </caption>
      <p>Data type: images</p>
      <p>File: oo_64064.png</p>
      <media xlink:href="biodiversity_data_journal-4-e8357-s001.png" mimetype="png file" mime-subtype="png" position="float" orientation="portrait" xlink:type="simple"/>
      <attrib specific-use="authors">Varsos et al</attrib>
    </supplementary-material>
    <supplementary-material id="S2181442" orientation="portrait" position="float" xlink:type="simple">
      <label>Supplementary material 2</label>
      <caption>
        <p>Matrix 2</p>
      </caption>
      <p>Data type: images</p>
      <p>File: oo_64063.png</p>
      <media xlink:href="biodiversity_data_journal-4-e8357-s002.png" mimetype="png file" mime-subtype="png" position="float" orientation="portrait" xlink:type="simple"/>
      <attrib specific-use="authors">Varsos et al</attrib>
    </supplementary-material>
    <supplementary-material id="S2181443" orientation="portrait" position="float" xlink:type="simple">
      <label>Supplementary material 3</label>
      <caption>
        <p>Equation 1</p>
      </caption>
      <p>Data type: images</p>
      <p>File: oo_64065.png</p>
      <media xlink:href="biodiversity_data_journal-4-e8357-s003.png" mimetype="png file" mime-subtype="png" position="float" orientation="portrait" xlink:type="simple"/>
      <attrib specific-use="authors">Varsos et al</attrib>
    </supplementary-material>
  </floats-group>
</article>
